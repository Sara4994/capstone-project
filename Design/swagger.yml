swagger: "2.0"
info: 
  version: "1.0.0"
  title: "Keep App API"
  description: "This specification is for the Keep App |
                This has all the informations regarding the API's that are used in the keep app"
  contact: 
    name: "Saravana Balaji | Prabin"
    email: "saravanabalajis49@gmail.com"
  license:
    name: "XYZ"
host: "localhost:3000"
basePath: "/v1/"
schemes: 
  - "http"
  - "https"
consumes: 
  - "application/json"
produces: 
  - "application/json"
  
tags:
  - name: users
    description: Refer to user who are register on this app
    
  - name: notes
    description: Refer to notes that are created in the app
    
  - name: labels
    description: Refer to labels that marked on the note
    
paths:
  /notes/users/{profileId}:
    get:
      summary: get all notes created by user
      description: returns the notes data that are created by user provided profile ID
      tags:
        - notes
   
      parameters:
        - $ref: "#/parameters/ProfileIdInPath"
      responses:
        "200":
          description: success
          schema:
            allOf:
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
        "404":
          description: notes are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
            
       
  /notes/:
    post:
      summary: create a new note
      description: creates a new note in the app
      operationId: "addNote"
      tags:
        - notes
      produces:
        - application/json
      parameters: 
        - 
          name: "note"
          in: "body"
          description: "note to add to the notes"
          required: true
          schema: 
            $ref: "#/definitions/Notes"
        - $ref: "#/parameters/ProfileIdInPath"
      responses:
        "200":
          description: add note
          schema:
            allOf:
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/GeneralError"
         
  /notes/{id}:
    get:
      summary: get note by note Id
      description: returns the notes data with particular note ID
      tags:
        - notes
      consumes: 
        - application/json
      produces: 
        - application/json
      parameters:
        - $ref : "#/parameters/IdInPath"
      responses:
        "200":
          description: success
          schema:
            allOf:
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
          
        "404":
          description: notes are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
            
    put:
      tags:
      - notes
      summary: "Update an existing note"
      description: ""
      operationId: "updateNote"
      consumes:
      - "application/json"
      
      produces:
      - "application/json"
      
      parameters:
        - $ref : "#/parameters/IdInPath"
      responses:
        "200":
          description: success
          schema:
            allOf:
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
        "400":
          description: Invalid ID supplied
        "204":
          description: Note not found
          schema:
            $ref: "#/definitions/NotFoundError"
        "405":
          description: "Validation exception"
        default:
          description: unexpected errors
          schema:
            $ref: "#/definitions/GeneralError"
          
            
    delete:
      description: deletes a single note based on the ID supplied
      operationId: deleteNote
      tags:
        - notes
      parameters:
        - name: id
          in: path
          description: ID of note to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: note deleted
          schema:
            allOf:
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/GeneralError'
            
            
  /labels/:
    get:
      summary: get all labels created
      description: returns the labels data that are created
      tags:
        - labels
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/labels"
            
        "404":
          description: notes are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
    
    post:
      summary: create a label for note
      description: creates a new label for the note
      operationId: "addLabel"
      tags:
        - labels
      produces:
        - application/json
      parameters: 
        - 
          name: "label"
          in: "body"
          description: "lable to add to the note"
          required: true
          schema: 
            $ref: "#/definitions/labels"
      responses:
        "200":
          description: add note
          schema:
            $ref: "#/definitions/labels"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/GeneralError"
            
  /labels/{id}:
    get:
      summary: get label by label id
      description: returns the label's data provided label ID
      tags:
        - labels
      parameters:
        - $ref : "#/parameters/IdInPath"
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/labels"
            
        "404":
          description: notes are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
    
    put:
      tags:
      - labels
      summary: "Update an existing label"
      description: ""
      operationId: "updateLabel"
      consumes:
      - "application/json"
      
      produces:
      - "application/json"
      
      parameters:
        - $ref : "#/parameters/IdInPath"
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/labels"
        "400":
          description: Invalid ID supplied
        "204":
          description: Label not found
          schema:
            $ref: "#/definitions/NotFoundError"
        "405":
          description: "Validation exception"
        default:
          description: unexpected errors
          schema:
            $ref: "#/definitions/GeneralError"
        
            
    delete:
      description: deletes a single label based on the ID supplied
      operationId: deleteLabel
      tags:
        - labels
      parameters:
        - name: id
          in: path
          description: ID of label to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: label deleted
          schema:
            $ref: '#/definitions/labels'
            
  /labels/users/{profileId}:
    get:
      summary: get all labels by user
      description: returns the notes data that are created by user provided profile ID
      tags:
        - labels
   
      parameters:
        - $ref: "#/parameters/ProfileIdInPath"
      responses:
        "200":
          description: success
          schema:
            allOf:
                - $ref: "#/definitions/userProfile"
                - $ref: "#/definitions/Notes"
                - $ref: "#/definitions/lists"
                - $ref: "#/definitions/labels"
        "404":
          description: notes are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
            
            
  /users/{profileId}:
    get:
      summary: get user by user id
      description: returns the user's data provided user ID
      tags:
        - users
      parameters:
        - $ref : "#/parameters/ProfileIdInPath"
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/userProfile"
            
        "404":
          description: user details are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
            
  /users/:
    get:
      summary: get all users who are registered
      description: returns the user's data 
      tags:
        - users
      parameters:
        - $ref : "#/parameters/ProfileIdInPath"
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/userProfile"
            
        "404":
          description: users details are not retrieved
          schema:
            $ref: "#/definitions/NotFoundError"
          
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralError"
        
    post:
      summary: create an user when he/she registers
      description: creates a new user when he/she register
      operationId: "addUserl"
      tags:
        - users
      produces:
        - application/json
      parameters: 
        - 
          name: "user"
          in: "body"
          description: "user to add to the note"
          required: true
          schema: 
            $ref: "#/definitions/userProfile"
      responses:
        "200":
          description: add user
          schema:
            $ref: "#/definitions/userProfile"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/GeneralError"
         
      
    
    
  
            
definitions:
# A general message schema in case of an error
  GeneralError:
    required:
      - message
    properties:
      message:
        type: string
  # A Not found error that is sent back in case no results are found for the 
  # requested resource
  NotFoundError:
    required:
      - message
      - hint
    properties:
      message:
        type: string
      hint:
        type: string
        
  Notes:
    required:
      - noteId
      - noteTitle
      - isSentence
      - Users
      - createdBy
      - labels
      - lists
    properties:
      nodeId:
        type: string
      noteTitle:
        type: string
      isSentence:
        type: boolean
        enum:
          - true
          - false
      users:
        type: array
        items:
          $ref: "#/definitions/users"
      createdBy:
        type: string
      labels: 
        type: array
        items:
          $ref: "#/definitions/labels"
      lists:
        type: array
        items:
          $ref: "#/definitions/lists"
        
  users:
    required:
      - userId
      - uname
    properties:
      userId:
        type: string
      uname:
        type: string
      
  labels:
    required:
      - labelId
      - labelName
    properties:
      labelId:
        type: string
      labelName:
        type: string
        
  lists:
    required:
      - listId
      - listText
      - isChecked
    properties:
      listId:
        type: string
      listText:
        type: string
      isChecked:
        type: boolean
        
  userProfile:
    required:
      - userId
      - profileId
    properties:
      userId:
        type: string
      profileId:
        type: string

parameters:
  IdInPath:
      name: id
      in: path
      type: string
      required: true
  LabelIdInPath:
      name: id
      in: path
      type: string
      required: true
      
  ProfileIdInPath:
      name: profileId
      in: path
      type: string
      required: true